buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}


apply plugin: "curseforge"
apply plugin: "forge"

//This is where we increment the version
def Properties versionProps = new Properties()
    def versionPropsFile = file('version.properties')
    if(versionPropsFile.exists())
        versionProps.load(new FileInputStream(versionPropsFile))
    def code = (versionProps['VERSION_CODE'] ?: "0").toInteger() + 1
    versionProps['VERSION_CODE'] = code.toString()
    versionProps.store(versionPropsFile.newWriter(), null)

//Add the version number to the regular version
version = "1.7.10-0.1." + code
group= "io.github.chbachman.ModularArmour"
archivesBaseName = "ModularArmour"

minecraft {
    version = "1.7.10-10.13.2.1230"
    if(file('../run').exists()){
     assetDir = "../run/assets"
    } else {
     assetDir = "/assets"
    }

}

task deobfJar(type: Jar, dependsOn: 'classes') {
    from sourceSets.main.output
    classifier = 'deobf'
}
tasks.assemble.dependsOn deobfJar

curse {
    apiKey = "a70e20e1-8d48-446b-8040-d08b83bb6793"
    projectId = "224011"
    changelog = """
    
    """
    releaseType = "beta"

    additionalArtifact deobfJar
    
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
